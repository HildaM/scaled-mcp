// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: proto/mcppb/session.proto

package mcppb

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// MessageType defines the types of messages that can be sent to a session actor
type MessageType int32

const (
	MessageType_UNKNOWN    MessageType = 0
	MessageType_SEND       MessageType = 1
	MessageType_CLOSE      MessageType = 2
	MessageType_INITIALIZE MessageType = 3
	MessageType_HEARTBEAT  MessageType = 4
)

// Enum value maps for MessageType.
var (
	MessageType_name = map[int32]string{
		0: "UNKNOWN",
		1: "SEND",
		2: "CLOSE",
		3: "INITIALIZE",
		4: "HEARTBEAT",
	}
	MessageType_value = map[string]int32{
		"UNKNOWN":    0,
		"SEND":       1,
		"CLOSE":      2,
		"INITIALIZE": 3,
		"HEARTBEAT":  4,
	}
)

func (x MessageType) Enum() *MessageType {
	p := new(MessageType)
	*p = x
	return p
}

func (x MessageType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MessageType) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_mcppb_session_proto_enumTypes[0].Descriptor()
}

func (MessageType) Type() protoreflect.EnumType {
	return &file_proto_mcppb_session_proto_enumTypes[0]
}

func (x MessageType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MessageType.Descriptor instead.
func (MessageType) EnumDescriptor() ([]byte, []int) {
	return file_proto_mcppb_session_proto_rawDescGZIP(), []int{0}
}

// SessionActorMessage is a message that can be sent to a session actor
type SessionActorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Type          MessageType            `protobuf:"varint,1,opt,name=type,proto3,enum=mcppb.MessageType" json:"type,omitempty"`
	Payload       string                 `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionActorMessage) Reset() {
	*x = SessionActorMessage{}
	mi := &file_proto_mcppb_session_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionActorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionActorMessage) ProtoMessage() {}

func (x *SessionActorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcppb_session_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionActorMessage.ProtoReflect.Descriptor instead.
func (*SessionActorMessage) Descriptor() ([]byte, []int) {
	return file_proto_mcppb_session_proto_rawDescGZIP(), []int{0}
}

func (x *SessionActorMessage) GetType() MessageType {
	if x != nil {
		return x.Type
	}
	return MessageType_UNKNOWN
}

func (x *SessionActorMessage) GetPayload() string {
	if x != nil {
		return x.Payload
	}
	return ""
}

// InitSessionActorMessage is used to initialize a session actor
type InitSessionActorMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InitSessionActorMessage) Reset() {
	*x = InitSessionActorMessage{}
	mi := &file_proto_mcppb_session_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InitSessionActorMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InitSessionActorMessage) ProtoMessage() {}

func (x *InitSessionActorMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcppb_session_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InitSessionActorMessage.ProtoReflect.Descriptor instead.
func (*InitSessionActorMessage) Descriptor() ([]byte, []int) {
	return file_proto_mcppb_session_proto_rawDescGZIP(), []int{1}
}

func (x *InitSessionActorMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

// SSEEventMessage represents an SSE event to be sent to the client
type SSEEventMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            []byte                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Data          []byte                 `protobuf:"bytes,2,opt,name=data,proto3" json:"data,omitempty"`
	Event         []byte                 `protobuf:"bytes,3,opt,name=event,proto3" json:"event,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SSEEventMessage) Reset() {
	*x = SSEEventMessage{}
	mi := &file_proto_mcppb_session_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SSEEventMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SSEEventMessage) ProtoMessage() {}

func (x *SSEEventMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcppb_session_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SSEEventMessage.ProtoReflect.Descriptor instead.
func (*SSEEventMessage) Descriptor() ([]byte, []int) {
	return file_proto_mcppb_session_proto_rawDescGZIP(), []int{2}
}

func (x *SSEEventMessage) GetId() []byte {
	if x != nil {
		return x.Id
	}
	return nil
}

func (x *SSEEventMessage) GetData() []byte {
	if x != nil {
		return x.Data
	}
	return nil
}

func (x *SSEEventMessage) GetEvent() []byte {
	if x != nil {
		return x.Event
	}
	return nil
}

// SessionHeartbeatMessage is sent periodically to keep the session alive
type SessionHeartbeatMessage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	SessionId     string                 `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SessionHeartbeatMessage) Reset() {
	*x = SessionHeartbeatMessage{}
	mi := &file_proto_mcppb_session_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SessionHeartbeatMessage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SessionHeartbeatMessage) ProtoMessage() {}

func (x *SessionHeartbeatMessage) ProtoReflect() protoreflect.Message {
	mi := &file_proto_mcppb_session_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SessionHeartbeatMessage.ProtoReflect.Descriptor instead.
func (*SessionHeartbeatMessage) Descriptor() ([]byte, []int) {
	return file_proto_mcppb_session_proto_rawDescGZIP(), []int{3}
}

func (x *SessionHeartbeatMessage) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *SessionHeartbeatMessage) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

var File_proto_mcppb_session_proto protoreflect.FileDescriptor

const file_proto_mcppb_session_proto_rawDesc = "" +
	"\n" +
	"\x19proto/mcppb/session.proto\x12\x05mcppb\"W\n" +
	"\x13SessionActorMessage\x12&\n" +
	"\x04type\x18\x01 \x01(\x0e2\x12.mcppb.MessageTypeR\x04type\x12\x18\n" +
	"\apayload\x18\x02 \x01(\tR\apayload\"8\n" +
	"\x17InitSessionActorMessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\"K\n" +
	"\x0fSSEEventMessage\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\fR\x02id\x12\x12\n" +
	"\x04data\x18\x02 \x01(\fR\x04data\x12\x14\n" +
	"\x05event\x18\x03 \x01(\fR\x05event\"V\n" +
	"\x17SessionHeartbeatMessage\x12\x1d\n" +
	"\n" +
	"session_id\x18\x01 \x01(\tR\tsessionId\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp*N\n" +
	"\vMessageType\x12\v\n" +
	"\aUNKNOWN\x10\x00\x12\b\n" +
	"\x04SEND\x10\x01\x12\t\n" +
	"\x05CLOSE\x10\x02\x12\x0e\n" +
	"\n" +
	"INITIALIZE\x10\x03\x12\r\n" +
	"\tHEARTBEAT\x10\x04B.Z,github.com/traego/scaled-mcp/pkg/proto/mcppbb\x06proto3"

var (
	file_proto_mcppb_session_proto_rawDescOnce sync.Once
	file_proto_mcppb_session_proto_rawDescData []byte
)

func file_proto_mcppb_session_proto_rawDescGZIP() []byte {
	file_proto_mcppb_session_proto_rawDescOnce.Do(func() {
		file_proto_mcppb_session_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_mcppb_session_proto_rawDesc), len(file_proto_mcppb_session_proto_rawDesc)))
	})
	return file_proto_mcppb_session_proto_rawDescData
}

var file_proto_mcppb_session_proto_enumTypes = make([]protoimpl.EnumInfo, 1)
var file_proto_mcppb_session_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_proto_mcppb_session_proto_goTypes = []any{
	(MessageType)(0),                // 0: mcppb.MessageType
	(*SessionActorMessage)(nil),     // 1: mcppb.SessionActorMessage
	(*InitSessionActorMessage)(nil), // 2: mcppb.InitSessionActorMessage
	(*SSEEventMessage)(nil),         // 3: mcppb.SSEEventMessage
	(*SessionHeartbeatMessage)(nil), // 4: mcppb.SessionHeartbeatMessage
}
var file_proto_mcppb_session_proto_depIdxs = []int32{
	0, // 0: mcppb.SessionActorMessage.type:type_name -> mcppb.MessageType
	1, // [1:1] is the sub-list for method output_type
	1, // [1:1] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_mcppb_session_proto_init() }
func file_proto_mcppb_session_proto_init() {
	if File_proto_mcppb_session_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_mcppb_session_proto_rawDesc), len(file_proto_mcppb_session_proto_rawDesc)),
			NumEnums:      1,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_proto_mcppb_session_proto_goTypes,
		DependencyIndexes: file_proto_mcppb_session_proto_depIdxs,
		EnumInfos:         file_proto_mcppb_session_proto_enumTypes,
		MessageInfos:      file_proto_mcppb_session_proto_msgTypes,
	}.Build()
	File_proto_mcppb_session_proto = out.File
	file_proto_mcppb_session_proto_goTypes = nil
	file_proto_mcppb_session_proto_depIdxs = nil
}
